version: '2'

services:

  akitaproxy:
    extends:
      file: common.yml
      service: haproxy
    ports:
      - "443:443"
    volumes:
      - ${DOCKERFILES}/projects/selfsigned.pem:/etc/ssl/cert.pem:ro

  akitaconsultemplate:
    extends:
      file: common.yml
      service: consultemplate
    command: -consul=consulserver:8500 -wait=5s -template="/tmp/haproxy.cfg.ctmpl:/usr/local/etc/haproxy/haproxy.cfg:docker restart configurations_akitaproxy_1"
    volumes:
      - ${DOCKERFILES}/projects/akita/haproxy.cfg.ctmpl:/tmp/haproxy.cfg.ctmpl:ro
    # volumes_from:
    #   - aktiaproxy

  akita:
    extends:
      file: common.yml
      service: akita-proxyable
    ports:
      - "443:443"
    environment:
      - SSL= existingkeys
    volumes:
      - ${DOCKERFILES}/projects/selfsigned.key:/etc/nginx/ssl/nginx.key:ro
      - ${DOCKERFILES}/projects/selfsigned.crt:/etc/nginx/ssl/nginx.crt:ro

  akita-proxyable:
    image: akita:develop
    environment:
      - NED_SERVICE=http://nedapi:8080/v1
      - MAILER_ADDRESS=mailcatcher
      - MAILER_PORT=1025
      - NED_USERAPP=dev
      - NED_PASSWORD=dev
      - CAS_URL=https://nedcas:8443
      - SECRET_KEY_BASE=secretgoeshere
      - EXACTTARGET_ID=
      - EXACTTARGET_SECRET=
      - SALESFORCE_HOST=
      - SALESFORCE_CLIENT_ID=
      - SALESFORCE_CLIENT_SECRET=
      - SALESFORCE_USERNAME=
      - SALESFORCE_PASSWORD=
      - SALESFORCE_CONSUMER_APP=
      - SALESFORCE_CONSUMER_PASSWORD=
      - MOODLE_TOKEN=
      - RECAPTCHA_SECRET=
      - SSL=none  # options = none, existingkeys
    # volumes:    # when using SSL=existingkeys
    #   - ${DOCKERFILES}/projects/selfsigned.key:/etc/nginx/ssl/nginx.key:ro
    #   - ${DOCKERFILES}/projects/selfsigned.crt:/etc/nginx/ssl/nginx.crt:ro

  casproxy:
    extends:
      file: common.yml
      service: haproxy
    ports:
      - "8443:443"
    volumes:
      - ${DOCKERFILES}/projects/selfsigned.pem:/etc/ssl/cert.pem:ro

  casconsultemplate:
    extends:
      file: common.yml
      service: consultemplate
    command: -consul=consulserver:8500 -wait=5s -template="/tmp/haproxy.cfg.ctmpl:/usr/local/etc/haproxy/haproxy.cfg:docker restart configurations_casproxy_1"
    volumes:
      - ${DOCKERFILES}/projects/ned-cas/haproxy.cfg.ctmpl:/tmp/haproxy.cfg.ctmpl:ro
    # volumes_from:
    #   - casproxy

  nedcas:
    extends:
      file: common.yml
      service: nedcas-proxyable

  nedcas-proxyable:
    image: nedcas:develop
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=ned
      - MYSQL_USER_PASSWORD=ned
      - MYSQL_HOSTNAME=neddb
      - MYSQL_DATABASE=namedEntities
      - CAS_DATABASE=cas
      - NED_SERVICE=http://nedapi:8080/v1
      - REGISTRATION_BASE_URL=http://localhost   # TODO: fix this
      - COOKIE_DOMAIN=nedcas
    # volumes:
    #   - ${DOCKERFILES}/projects/selfsigned.jks:/root/web.jks:ro

  nedproxy:
    extends:
      file: common.yml
      service: haproxy
    ports:
      - "8081:8080"

  nedconsultemplate:
    extends:
      file: common.yml
      service: consultemplate
    command: -consul=consulserver:8500 -wait=5s -template="/tmp/haproxy.cfg.ctmpl:/usr/local/etc/haproxy/haproxy.cfg:docker restart configurations_nedproxy_1" # $$(docker ps -q -f name=nedproxy)
    volumes:
      - ${DOCKERFILES}/projects/named-entity.service/haproxy.cfg.ctmpl:/tmp/haproxy.cfg.ctmpl:ro
    # volumes_from:
    #   - nedproxy

  nedapi:
    extends: ned-proxyable
    ports:
      - 8081:8080

  ned-proxyable:
    image: nedapi:develop
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=ned
      - MYSQL_USER_PASSWORD=ned
      - MYSQL_HOSTNAME=neddb
      - MYSQL_DATABASE=namedEntities
      - AMBRA_DATABASE=ambra
      - RINGGOLD_DATABASE=ringgold

  neddb:
    image: percona:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root
    # volumes:    # enable to persist database between runs
    #   - /var/lib/mysql

  haproxy:
    image: haproxy:alpine
    # ports:
    #   - "1936:1936"
    volumes:
      - /usr/local/etc/haproxy
      - /dev/log:/dev/log

  consulserver:
    image: gliderlabs/consul-server
    command: -bootstrap -ui
    ports:
      - "8300:8300"
      - "8400:8400"
      - "8500:8500"
      - "8600:53/udp"

  consultemplate:
    image: avthart/consul-template
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
    # environment:
    #   - CONSUL_TEMPLATE_LOG=debug

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - 1080:1080

  ambra:
    image: ambra:master
    ports:
      - "80:8080"
    volumes:
      - ../../templates:/root/templates
      # - ../tests/test_data/sample_templates:/root/templates
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=ambra
      - MYSQL_USER_PASSWORD=ambra
      - MYSQL_HOSTNAME=ambradb
      - MYSQL_DATABASE=ambra
      - REPO_SERVICE=http://contentrepo:8080

  wombat:
    image: wombat:master
    volumes:
      - ../../plos-themes:/root/themes
    ports:
      - 8081:8080
    environment:
      - RHINO_SERVICE=http://rhino:8080

  rhino:
    image: rhino:master
    ports:
      - 8080:8080
    volumes:
      - $HOME/datastores/ingest:/root/ingest
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=ambra
      - MYSQL_USER_PASSWORD=ambra
      - MYSQL_HOSTNAME=ambradb
      - MYSQL_DATABASE=ambra
      - REPO_SERVICE=http://contentrepo:8080

  indexerminion:
    image: indexerminion:master
    environment:
      - RHINO_SERVICE=http://rhino:8080
      - COUNTER_DB_URL=jdbc:mysql://counterdb/plosreports
      - COUNTER_USER=ambra
      - COUNTER_PASSWORD=ambra
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=ambra
      - MYSQL_USER_PASSWORD=ambra
      - MYSQL_HOSTNAME=counterdb
      - MYSQL_DATABASE=plosreports

  ambradb:
    image: percona:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root
  #  ports:
  #    - 3306:3306

  counterdb:
    image: percona:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root

  solr:
    image: solr:master
    ports:
      - "8983:8080"
    # volumes:
    #   - "$HOME/datastores/solr:/usr/local/tomcat/solr/home/data"

  contentrepo:
    image: contentrepo:master
    ports:
      - "8085:8080"
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=repouser
      - MYSQL_USER_PASSWORD=
      - MYSQL_HOSTNAME=repodb
      - MYSQL_DATABASE=repo
      - MOGILE_TRACKERS=mogiletracker:7001

  repodb:
    image: percona:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - "3305:3306"

  mogiletracker:
    image: mogiletracker
    environment:
      - MYSQL_HOSTNAME=mogiledb
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=mogile
      - MYSQL_USER_PASSWORD=mogile
      - MOG_NODE_HOST=mogilenode

  mogilenode:
    image: mogilenode

  mogiledb:
    image: percona:5.6
    environment:
      - MYSQL_ROOT_PASSWORD=root
